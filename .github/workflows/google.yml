# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Kubernetes preview environments

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      # - closed - destroy preview environment

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: demo-preview-environments    # TODO: update to cluster name
  GKE_ZONE: europe-north1-a   # TODO: update to cluster zone

jobs:
  deploy-preview-environment:
    name: Deploy to Preview
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/793381027767/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: 'sa-deploy@starry-minutia-376412.iam.gserviceaccount.com'

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Install Garden CLI tool
    - name: Set up Garden
      run: |-
        curl -sL https://get.garden.io/install.sh | bash
        export PATH=$PATH:$HOME/.garden/bin
        chmod u+x $HOME/.garden
        echo "PATH=$HOME/.garden/bin:$PATH" >> $GITHUB_ENV

    # Deploy the preview environment to the GKE cluster
    - name: Deploy
      run: |-
        garden --version
        cd ./demo-project-start
        echo $GITHUB_RUN_NUMBER
        cat project.garden.yml

        garden --env=preview plugins kubernetes cluster-init
        garden deploy
        garden get status

